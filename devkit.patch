Setup Mise and improve README

From: stephane-klein <contact@stephane-klein.info>


---
 .mise.toml                                      |    2 +
 README.sklein.md                                |   20 ++++++
 backend/.envrc                                  |   25 +++++++
 backend/.gitignore                              |    2 +
 backend/.mise.toml                              |    6 ++
 backend/.secret.skel                            |    3 +
 backend/README.md                               |   80 +++++++++++++++++++++++
 backend/docker-compose.yaml                     |   17 +++++
 backend/scripts/check-openapi-api-connection.sh |    7 ++
 backend/scripts/create-admin-user.sh            |   25 +++++++
 10 files changed, 187 insertions(+)
 create mode 100644 .mise.toml
 create mode 100644 README.sklein.md
 create mode 100644 backend/.envrc
 create mode 100644 backend/.mise.toml
 create mode 100644 backend/.secret.skel
 create mode 100644 backend/README.md
 create mode 100644 backend/docker-compose.yaml
 create mode 100755 backend/scripts/check-openapi-api-connection.sh
 create mode 100755 backend/scripts/create-admin-user.sh

diff --git a/.mise.toml b/.mise.toml
new file mode 100644
index 000000000..3ffd2798a
--- /dev/null
+++ b/.mise.toml
@@ -0,0 +1,2 @@
+[tools]
+node="22.15.0"
diff --git a/README.sklein.md b/README.sklein.md
new file mode 100644
index 000000000..ae6958fe8
--- /dev/null
+++ b/README.sklein.md
@@ -0,0 +1,20 @@
+# Getting started
+
+Before using the *OpenWebUI* frontend, you need to start the backend. Follow [`backend/README.md`](backend/README.md) to get started.
+
+Install frontend dependencies:
+
+```sh
+$ mise install
+$ npm install # 1.9G installed
+$ pnpm run dev:frontend
+```
+
+Next, open your browser on <http://localhost:5173/>.
+
+You can connect as administrator at the following URL: <http://localhost:5173/logadmin>.
+
+Default admin user is:
+
+- email: `admin@example.com`
+- password: `password`
diff --git a/backend/.envrc b/backend/.envrc
new file mode 100644
index 000000000..9dbcf922c
--- /dev/null
+++ b/backend/.envrc
@@ -0,0 +1,25 @@
+source .secret
+
+export GLOBAL_LOG_LEVEL="DEBUG"
+export REDIS_URL="redis://localhost:6379/0"
+
+export ENABLE_OLLAMA_API="false"
+export ENABLE_OPENAI_API="true"
+export ENABLE_CODE_EXECUTION="false"
+export ENABLE_AUTOCOMPLETE_GENERATION="false"
+export ENABLE_EVALUATION_ARENA_MODELS="false"
+export ENABLE_TAGS_GENERATION="false"
+
+export ENABLE_WEBSOCKET_SUPPORT="false"
+
+export OPENAI_API_BASE_URLS="${ALBERT_OPENAI_API_URL}"
+export OPENAI_API_KEY="${ALBERT_OPENAI_API_KEY}"
+
+export REDIS_HOST=localhost
+export REDIS_PORT=6379
+export REDIS_PASSWORD=""
+
+# docker-compose environment variables
+export PROJECT_NAME="openwebui_backend"
+export INSTANCE_ID=$(pwd | shasum -a 1 | awk '{print $1}' | cut -c 1-12) # Used to define docker volume path
+export COMPOSE_PROJECT_NAME=${PROJECT_NAME}_${INSTANCE_ID}
diff --git a/backend/.gitignore b/backend/.gitignore
index 1f9a260cd..c64d5294b 100644
--- a/backend/.gitignore
+++ b/backend/.gitignore
@@ -10,3 +10,5 @@ Pipfile
 /data/*
 /open_webui/data/*
 .webui_secret_key
+.venv
+.secret
diff --git a/backend/.mise.toml b/backend/.mise.toml
new file mode 100644
index 000000000..67d64713d
--- /dev/null
+++ b/backend/.mise.toml
@@ -0,0 +1,6 @@
+[tools]
+python="3.11.11"
+jq="1.7.1"
+
+[env]
+_.python.venv = { path = ".venv", create = true }
diff --git a/backend/.secret.skel b/backend/.secret.skel
new file mode 100644
index 000000000..976fd075a
--- /dev/null
+++ b/backend/.secret.skel
@@ -0,0 +1,3 @@
+# Ask for this information at contact@stephane-klein.info or get it from the team's Bitwarden
+export ALBERT_OPENAI_API_URL="..."
+export ALBERT_OPENAI_API_KEY="..."
diff --git a/backend/README.md b/backend/README.md
new file mode 100644
index 000000000..0b2806840
--- /dev/null
+++ b/backend/README.md
@@ -0,0 +1,80 @@
+# OpenWebUI backend
+
+This backend is implemented in Python.
+
+```sh
+$ mise install
+$ pip install -r requirements.txt # Warning, 7.5GB of disk space used after installation
+```
+
+```sh
+$ cp .secret.skel .secret
+```
+
+Configure the parameters in the `.secret` file.
+
+```sh
+$ source .envrc
+```
+
+Check that OpenAPI access is working correctly:
+
+```sh
+$ ./scripts/check-openapi-api-connection.sh
+{
+  "object": "list",
+  "data": [
+    {
+      "id": "albert-small",
+      "created": 1746611077,
+      "object": "model",
+      "owned_by": "Albert API",
+      "max_context_length": 64000,
+      "type": "text-generation",
+      "aliases": [
+        "meta-llama/Llama-3.1-8B-Instruct"
+      ]
+    },
+...
+```
+
+Start Redis server:
+
+```
+$ docker compose up -d --wait
+```
+
+Start OpenWebUI backend:
+
+```sh
+$ ./dev.sh
+INFO:     Will watch for changes in these directories: ['/home/stephane/git/github.com/stephane-klein/albert-conversation-sklein-patchs/upstream/backend']
+INFO:     Uvicorn running on http://0.0.0.0:8080 (Press CTRL+C to quit)
+INFO:     Started reloader process [170043] using WatchFiles
+...
+INFO:     Application startup complete.
+```
+
+Wait for "Application startup complete." log message then, if not previously done, create admin user:
+
+```
+$ ./scripts/create-admin-user.sh
+Default admin user is:
+
+- email: admin@example.com
+- password: password
+- name: Admin
+```
+
+Then follow the instructions in [`../README.sklein.md`](../README.sklein.md).
+
+## Data reset
+
+If you want to reset the data, run the following commands:
+
+```sh
+$ docker compose down -v
+$ rm data/webui.db
+$ docker compose up -d --wait
+$ ./dev.sh
+```
diff --git a/backend/docker-compose.yaml b/backend/docker-compose.yaml
new file mode 100644
index 000000000..ac2423196
--- /dev/null
+++ b/backend/docker-compose.yaml
@@ -0,0 +1,17 @@
+services:
+  redis:
+    image: redis:7-alpine
+    restart: unless-stopped
+    ports:
+      - "6379:6379"
+    volumes:
+      - redis:/data
+    healthcheck:
+      test: ["CMD", "redis-cli", "ping"]
+      timeout: 10s
+      retries: 3
+      start_period: 10s
+
+volumes:
+  redis:
+     name: ${COMPOSE_PROJECT_NAME}_redis
diff --git a/backend/scripts/check-openapi-api-connection.sh b/backend/scripts/check-openapi-api-connection.sh
new file mode 100755
index 000000000..aaf5a6d27
--- /dev/null
+++ b/backend/scripts/check-openapi-api-connection.sh
@@ -0,0 +1,7 @@
+#!/usr/bin/env bash
+set -e
+
+cd "$(dirname "$0")/../"
+
+curl -s ${ALBERT_OPENAI_API_URL}/models \
+  -H "Authorization: Bearer $ALBERT_OPENAI_API_KEY" | jq
diff --git a/backend/scripts/create-admin-user.sh b/backend/scripts/create-admin-user.sh
new file mode 100755
index 000000000..0811362be
--- /dev/null
+++ b/backend/scripts/create-admin-user.sh
@@ -0,0 +1,25 @@
+#!/usr/bin/env bash
+cd "$(dirname "$0")/../"
+
+response=$(curl -s -X POST "http://localhost:8080/api/v1/auths/signup" \
+  -H "accept: application/json" \
+  -H "Content-Type: application/json" \
+  -d "{ \"email\": \"admin@example.com\", \"password\": \"password\", \"name\": \"Admin\" }" \
+  -w "\n%{http_code}")
+
+http_code=$(echo "$response" | tail -n1)
+body=$(echo "$response" | sed '$d')
+
+if [ "$http_code" -ge 400 ]; then
+    echo "HTTP Error $http_code"
+    echo $body
+    exit 1
+fi
+
+cat <<'EOF'
+Default admin user is:
+
+- email: admin@example.com
+- password: password
+- name: Admin
+EOF
